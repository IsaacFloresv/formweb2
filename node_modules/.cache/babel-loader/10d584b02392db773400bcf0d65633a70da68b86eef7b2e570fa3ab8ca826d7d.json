{"ast":null,"code":"import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport { generateQuery } from \"./utils.js\";\nvar SCRIPT_ID = 'hcaptcha-api-script-id';\nvar HCAPTCHA_LOAD_FN_NAME = 'hcaptchaOnLoad'; // Prevent loading API script multiple times\n\nvar resolveFn;\nvar rejectFn;\nvar mountPromise = new Promise(function (resolve, reject) {\n  resolveFn = resolve;\n  rejectFn = reject;\n}); // Generate hCaptcha API script\n\nvar mountCaptchaScript = function mountCaptchaScript(params) {\n  if (params === void 0) {\n    params = {};\n  }\n  if (document.getElementById(SCRIPT_ID)) {\n    // API was already requested\n    return mountPromise;\n  } // Create global onload callback\n\n  window[HCAPTCHA_LOAD_FN_NAME] = resolveFn;\n  var domain = params.apihost || \"https://js.hcaptcha.com\";\n  delete params.apihost;\n  var script = document.createElement(\"script\");\n  script.id = SCRIPT_ID;\n  script.src = domain + \"/1/api.js?render=explicit&onload=\" + HCAPTCHA_LOAD_FN_NAME;\n  script.async = true;\n  script.onerror = function (event) {\n    return rejectFn('script-error');\n  };\n  var query = generateQuery(params);\n  script.src += query !== \"\" ? \"&\" + query : \"\";\n  document.head.appendChild(script);\n  return mountPromise;\n};\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HCaptcha, _React$Component);\n  function HCaptcha(props) {\n    var _this;\n    _this = _React$Component.call(this, props) || this; // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind(_assertThisInitialized(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind(_assertThisInitialized(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind(_assertThisInitialized(_this));\n    _this.isReady = _this.isReady.bind(_assertThisInitialized(_this)); // Event Handlers\n\n    _this.loadCaptcha = _this.loadCaptcha.bind(_assertThisInitialized(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleExpire = _this.handleExpire.bind(_assertThisInitialized(_this));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind(_assertThisInitialized(_this));\n    var isApiReady = typeof hcaptcha !== 'undefined';\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.state = {\n      isApiReady: isApiReady,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n  var _proto = HCaptcha.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    // Once captcha is mounted intialize hCaptcha - hCaptcha\n    var isApiReady = this.state.isApiReady;\n    /*\n     * Check if hCaptcha has already been loaded,\n     * If Yes, render the captcha\n     * If No, create script tag and wait to render the captcha\n     */\n\n    if (isApiReady) {\n      this.renderCaptcha();\n      return;\n    }\n    this.loadCaptcha();\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var captchaId = this.state.captchaId;\n    if (!this.isReady()) {\n      return;\n    } // Reset any stored variables / timers when unmounting\n\n    hcaptcha.reset(captchaId);\n    hcaptcha.remove(captchaId);\n  };\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    // Prevent component re-rendering when these internal state variables are updated\n    if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n      return false;\n    }\n    return true;\n  };\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // Prop Keys that could change\n    var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n    var match = keys.every(function (key) {\n      return prevProps[key] === _this2.props[key];\n    }); // If they have changed, remove current captcha and render a new one\n\n    if (!match) {\n      this.removeCaptcha(function () {\n        _this2.renderCaptcha();\n      });\n    }\n  };\n  _proto.loadCaptcha = function loadCaptcha() {\n    if (this.apiScriptRequested) {\n      return;\n    }\n    var _this$props = this.props,\n      apihost = _this$props.apihost,\n      assethost = _this$props.assethost,\n      endpoint = _this$props.endpoint,\n      host = _this$props.host,\n      imghost = _this$props.imghost,\n      hl = _this$props.languageOverride,\n      reCaptchaCompat = _this$props.reCaptchaCompat,\n      reportapi = _this$props.reportapi,\n      sentry = _this$props.sentry,\n      custom = _this$props.custom;\n    var mountParams = {\n      apihost: apihost,\n      assethost: assethost,\n      endpoint: endpoint,\n      hl: hl,\n      host: host,\n      imghost: imghost,\n      recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n      reportapi: reportapi,\n      sentry: sentry,\n      custom: custom\n    };\n    mountCaptchaScript(mountParams).then(this.handleOnLoad)[\"catch\"](this.handleError);\n    this.apiScriptRequested = true;\n  };\n  _proto.renderCaptcha = function renderCaptcha(onReady) {\n    var isApiReady = this.state.isApiReady;\n    if (!isApiReady) return;\n    var renderParams = Object.assign({\n      \"open-callback\": this.handleOpen,\n      \"close-callback\": this.handleClose,\n      \"error-callback\": this.handleError,\n      \"chalexpired-callback\": this.handleChallengeExpired,\n      \"expired-callback\": this.handleExpire,\n      \"callback\": this.handleSubmit\n    }, this.props, {\n      hl: this.props.hl || this.props.languageOverride,\n      languageOverride: undefined\n    }); //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n    var captchaId = hcaptcha.render(this.ref.current, renderParams);\n    this.setState({\n      isRemoved: false,\n      captchaId: captchaId\n    }, function () {\n      onReady && onReady();\n    });\n  };\n  _proto.resetCaptcha = function resetCaptcha() {\n    var captchaId = this.state.captchaId;\n    if (!this.isReady()) {\n      return;\n    } // Reset captcha state, removes stored token and unticks checkbox\n\n    hcaptcha.reset(captchaId);\n  };\n  _proto.removeCaptcha = function removeCaptcha(callback) {\n    var captchaId = this.state.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    this.setState({\n      isRemoved: true\n    }, function () {\n      hcaptcha.remove(captchaId);\n      callback && callback();\n    });\n  };\n  _proto.handleOnLoad = function handleOnLoad() {\n    var _this3 = this;\n    this.setState({\n      isApiReady: true\n    }, function () {\n      // render captcha and wait for captcha id\n      _this3.renderCaptcha(function () {\n        // trigger onLoad if it exists\n        var onLoad = _this3.props.onLoad;\n        if (onLoad) onLoad();\n      });\n    });\n  };\n  _proto.handleSubmit = function handleSubmit(event) {\n    var onVerify = this.props.onVerify;\n    var _this$state = this.state,\n      isRemoved = _this$state.isRemoved,\n      captchaId = _this$state.captchaId;\n    if (typeof hcaptcha === 'undefined' || isRemoved) return;\n    var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n    var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n    onVerify(token, ekey); //Dispatch event to verify user response\n  };\n\n  _proto.handleExpire = function handleExpire() {\n    var onExpire = this.props.onExpire;\n    var captchaId = this.state.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n    if (onExpire) onExpire();\n  };\n  _proto.handleError = function handleError(event) {\n    var onError = this.props.onError;\n    var captchaId = this.state.captchaId;\n    if (this.isReady()) {\n      // If hCaptcha runs into error, reset captcha - hCaptcha\n      hcaptcha.reset(captchaId);\n    }\n    if (onError) onError(event);\n  };\n  _proto.isReady = function isReady() {\n    var _this$state2 = this.state,\n      isApiReady = _this$state2.isApiReady,\n      isRemoved = _this$state2.isRemoved;\n    return isApiReady && !isRemoved;\n  };\n  _proto.handleOpen = function handleOpen() {\n    if (!this.isReady() || !this.props.onOpen) {\n      return;\n    }\n    this.props.onOpen();\n  };\n  _proto.handleClose = function handleClose() {\n    if (!this.isReady() || !this.props.onClose) {\n      return;\n    }\n    this.props.onClose();\n  };\n  _proto.handleChallengeExpired = function handleChallengeExpired() {\n    if (!this.isReady() || !this.props.onChalExpired) {\n      return;\n    }\n    this.props.onChalExpired();\n  };\n  _proto.execute = function execute(opts) {\n    if (opts === void 0) {\n      opts = null;\n    }\n    var captchaId = this.state.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    if (opts && typeof opts !== \"object\") {\n      opts = null;\n    }\n    return hcaptcha.execute(captchaId, opts);\n  };\n  _proto.setData = function setData(data) {\n    var captchaId = this.state.captchaId;\n    if (!this.isReady()) {\n      return;\n    }\n    if (data && typeof data !== \"object\") {\n      data = null;\n    }\n    hcaptcha.setData(captchaId, data);\n  };\n  _proto.getResponse = function getResponse() {\n    return hcaptcha.getResponse(this.state.captchaId);\n  };\n  _proto.getRespKey = function getRespKey() {\n    return hcaptcha.getRespKey(this.state.captchaId);\n  };\n  _proto.render = function render() {\n    var elementId = this.state.elementId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      id: elementId\n    });\n  };\n  return HCaptcha;\n}(React.Component);\nexport default HCaptcha;","map":{"version":3,"names":["_assertThisInitialized","_inheritsLoose","React","generateQuery","SCRIPT_ID","HCAPTCHA_LOAD_FN_NAME","resolveFn","rejectFn","mountPromise","Promise","resolve","reject","mountCaptchaScript","params","document","getElementById","window","domain","apihost","script","createElement","id","src","async","onerror","event","query","head","appendChild","HCaptcha","_React$Component","props","_this","call","renderCaptcha","bind","resetCaptcha","removeCaptcha","isReady","loadCaptcha","handleOnLoad","handleSubmit","handleExpire","handleError","handleOpen","handleClose","handleChallengeExpired","isApiReady","hcaptcha","ref","createRef","apiScriptRequested","state","isRemoved","elementId","captchaId","_proto","prototype","componentDidMount","componentWillUnmount","reset","remove","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","_this2","keys","match","every","key","_this$props","assethost","endpoint","host","imghost","hl","languageOverride","reCaptchaCompat","reportapi","sentry","custom","mountParams","recaptchacompat","then","onReady","renderParams","Object","assign","undefined","render","current","setState","callback","_this3","onLoad","onVerify","_this$state","token","getResponse","ekey","getRespKey","onExpire","onError","_this$state2","onOpen","onClose","onChalExpired","execute","opts","setData","data","Component"],"sources":["/workspaces/formweb2/node_modules/@hcaptcha/react-hcaptcha/dist/esm/index.js"],"sourcesContent":["import _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport * as React from 'react';\nimport { generateQuery } from \"./utils.js\";\nvar SCRIPT_ID = 'hcaptcha-api-script-id';\nvar HCAPTCHA_LOAD_FN_NAME = 'hcaptchaOnLoad'; // Prevent loading API script multiple times\n\nvar resolveFn;\nvar rejectFn;\nvar mountPromise = new Promise(function (resolve, reject) {\n  resolveFn = resolve;\n  rejectFn = reject;\n}); // Generate hCaptcha API script\n\nvar mountCaptchaScript = function mountCaptchaScript(params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  if (document.getElementById(SCRIPT_ID)) {\n    // API was already requested\n    return mountPromise;\n  } // Create global onload callback\n\n\n  window[HCAPTCHA_LOAD_FN_NAME] = resolveFn;\n  var domain = params.apihost || \"https://js.hcaptcha.com\";\n  delete params.apihost;\n  var script = document.createElement(\"script\");\n  script.id = SCRIPT_ID;\n  script.src = domain + \"/1/api.js?render=explicit&onload=\" + HCAPTCHA_LOAD_FN_NAME;\n  script.async = true;\n\n  script.onerror = function (event) {\n    return rejectFn('script-error');\n  };\n\n  var query = generateQuery(params);\n  script.src += query !== \"\" ? \"&\" + query : \"\";\n  document.head.appendChild(script);\n  return mountPromise;\n};\n\nvar HCaptcha = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(HCaptcha, _React$Component);\n\n  function HCaptcha(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this; // API Methods\n\n    _this.renderCaptcha = _this.renderCaptcha.bind(_assertThisInitialized(_this));\n    _this.resetCaptcha = _this.resetCaptcha.bind(_assertThisInitialized(_this));\n    _this.removeCaptcha = _this.removeCaptcha.bind(_assertThisInitialized(_this));\n    _this.isReady = _this.isReady.bind(_assertThisInitialized(_this)); // Event Handlers\n\n    _this.loadCaptcha = _this.loadCaptcha.bind(_assertThisInitialized(_this));\n    _this.handleOnLoad = _this.handleOnLoad.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.handleExpire = _this.handleExpire.bind(_assertThisInitialized(_this));\n    _this.handleError = _this.handleError.bind(_assertThisInitialized(_this));\n    _this.handleOpen = _this.handleOpen.bind(_assertThisInitialized(_this));\n    _this.handleClose = _this.handleClose.bind(_assertThisInitialized(_this));\n    _this.handleChallengeExpired = _this.handleChallengeExpired.bind(_assertThisInitialized(_this));\n    var isApiReady = typeof hcaptcha !== 'undefined';\n    _this.ref = /*#__PURE__*/React.createRef();\n    _this.apiScriptRequested = false;\n    _this.state = {\n      isApiReady: isApiReady,\n      isRemoved: false,\n      elementId: props.id,\n      captchaId: ''\n    };\n    return _this;\n  }\n\n  var _proto = HCaptcha.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Once captcha is mounted intialize hCaptcha - hCaptcha\n    var isApiReady = this.state.isApiReady;\n    /*\n     * Check if hCaptcha has already been loaded,\n     * If Yes, render the captcha\n     * If No, create script tag and wait to render the captcha\n     */\n\n    if (isApiReady) {\n      this.renderCaptcha();\n      return;\n    }\n\n    this.loadCaptcha();\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    var captchaId = this.state.captchaId;\n\n    if (!this.isReady()) {\n      return;\n    } // Reset any stored variables / timers when unmounting\n\n\n    hcaptcha.reset(captchaId);\n    hcaptcha.remove(captchaId);\n  };\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {\n    // Prevent component re-rendering when these internal state variables are updated\n    if (this.state.isApiReady !== nextState.isApiReady || this.state.isRemoved !== nextState.isRemoved) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var _this2 = this;\n\n    // Prop Keys that could change\n    var keys = ['sitekey', 'size', 'theme', 'tabindex', 'languageOverride', 'endpoint']; // See if any props changed during component update\n\n    var match = keys.every(function (key) {\n      return prevProps[key] === _this2.props[key];\n    }); // If they have changed, remove current captcha and render a new one\n\n    if (!match) {\n      this.removeCaptcha(function () {\n        _this2.renderCaptcha();\n      });\n    }\n  };\n\n  _proto.loadCaptcha = function loadCaptcha() {\n    if (this.apiScriptRequested) {\n      return;\n    }\n\n    var _this$props = this.props,\n        apihost = _this$props.apihost,\n        assethost = _this$props.assethost,\n        endpoint = _this$props.endpoint,\n        host = _this$props.host,\n        imghost = _this$props.imghost,\n        hl = _this$props.languageOverride,\n        reCaptchaCompat = _this$props.reCaptchaCompat,\n        reportapi = _this$props.reportapi,\n        sentry = _this$props.sentry,\n        custom = _this$props.custom;\n    var mountParams = {\n      apihost: apihost,\n      assethost: assethost,\n      endpoint: endpoint,\n      hl: hl,\n      host: host,\n      imghost: imghost,\n      recaptchacompat: reCaptchaCompat === false ? \"off\" : null,\n      reportapi: reportapi,\n      sentry: sentry,\n      custom: custom\n    };\n    mountCaptchaScript(mountParams).then(this.handleOnLoad)[\"catch\"](this.handleError);\n    this.apiScriptRequested = true;\n  };\n\n  _proto.renderCaptcha = function renderCaptcha(onReady) {\n    var isApiReady = this.state.isApiReady;\n    if (!isApiReady) return;\n    var renderParams = Object.assign({\n      \"open-callback\": this.handleOpen,\n      \"close-callback\": this.handleClose,\n      \"error-callback\": this.handleError,\n      \"chalexpired-callback\": this.handleChallengeExpired,\n      \"expired-callback\": this.handleExpire,\n      \"callback\": this.handleSubmit\n    }, this.props, {\n      hl: this.props.hl || this.props.languageOverride,\n      languageOverride: undefined\n    }); //Render hCaptcha widget and provide necessary callbacks - hCaptcha\n\n    var captchaId = hcaptcha.render(this.ref.current, renderParams);\n    this.setState({\n      isRemoved: false,\n      captchaId: captchaId\n    }, function () {\n      onReady && onReady();\n    });\n  };\n\n  _proto.resetCaptcha = function resetCaptcha() {\n    var captchaId = this.state.captchaId;\n\n    if (!this.isReady()) {\n      return;\n    } // Reset captcha state, removes stored token and unticks checkbox\n\n\n    hcaptcha.reset(captchaId);\n  };\n\n  _proto.removeCaptcha = function removeCaptcha(callback) {\n    var captchaId = this.state.captchaId;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    this.setState({\n      isRemoved: true\n    }, function () {\n      hcaptcha.remove(captchaId);\n      callback && callback();\n    });\n  };\n\n  _proto.handleOnLoad = function handleOnLoad() {\n    var _this3 = this;\n\n    this.setState({\n      isApiReady: true\n    }, function () {\n      // render captcha and wait for captcha id\n      _this3.renderCaptcha(function () {\n        // trigger onLoad if it exists\n        var onLoad = _this3.props.onLoad;\n        if (onLoad) onLoad();\n      });\n    });\n  };\n\n  _proto.handleSubmit = function handleSubmit(event) {\n    var onVerify = this.props.onVerify;\n    var _this$state = this.state,\n        isRemoved = _this$state.isRemoved,\n        captchaId = _this$state.captchaId;\n    if (typeof hcaptcha === 'undefined' || isRemoved) return;\n    var token = hcaptcha.getResponse(captchaId); //Get response token from hCaptcha widget\n\n    var ekey = hcaptcha.getRespKey(captchaId); //Get current challenge session id from hCaptcha widget\n\n    onVerify(token, ekey); //Dispatch event to verify user response\n  };\n\n  _proto.handleExpire = function handleExpire() {\n    var onExpire = this.props.onExpire;\n    var captchaId = this.state.captchaId;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    hcaptcha.reset(captchaId); // If hCaptcha runs into error, reset captcha - hCaptcha\n\n    if (onExpire) onExpire();\n  };\n\n  _proto.handleError = function handleError(event) {\n    var onError = this.props.onError;\n    var captchaId = this.state.captchaId;\n\n    if (this.isReady()) {\n      // If hCaptcha runs into error, reset captcha - hCaptcha\n      hcaptcha.reset(captchaId);\n    }\n\n    if (onError) onError(event);\n  };\n\n  _proto.isReady = function isReady() {\n    var _this$state2 = this.state,\n        isApiReady = _this$state2.isApiReady,\n        isRemoved = _this$state2.isRemoved;\n    return isApiReady && !isRemoved;\n  };\n\n  _proto.handleOpen = function handleOpen() {\n    if (!this.isReady() || !this.props.onOpen) {\n      return;\n    }\n\n    this.props.onOpen();\n  };\n\n  _proto.handleClose = function handleClose() {\n    if (!this.isReady() || !this.props.onClose) {\n      return;\n    }\n\n    this.props.onClose();\n  };\n\n  _proto.handleChallengeExpired = function handleChallengeExpired() {\n    if (!this.isReady() || !this.props.onChalExpired) {\n      return;\n    }\n\n    this.props.onChalExpired();\n  };\n\n  _proto.execute = function execute(opts) {\n    if (opts === void 0) {\n      opts = null;\n    }\n\n    var captchaId = this.state.captchaId;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    if (opts && typeof opts !== \"object\") {\n      opts = null;\n    }\n\n    return hcaptcha.execute(captchaId, opts);\n  };\n\n  _proto.setData = function setData(data) {\n    var captchaId = this.state.captchaId;\n\n    if (!this.isReady()) {\n      return;\n    }\n\n    if (data && typeof data !== \"object\") {\n      data = null;\n    }\n\n    hcaptcha.setData(captchaId, data);\n  };\n\n  _proto.getResponse = function getResponse() {\n    return hcaptcha.getResponse(this.state.captchaId);\n  };\n\n  _proto.getRespKey = function getRespKey() {\n    return hcaptcha.getRespKey(this.state.captchaId);\n  };\n\n  _proto.render = function render() {\n    var elementId = this.state.elementId;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.ref,\n      id: elementId\n    });\n  };\n\n  return HCaptcha;\n}(React.Component);\n\nexport default HCaptcha;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}